"""
Django settings for sesion project.

Generated by 'django-admin startproject' using Django 4.2.5.
"""

from pathlib import Path

# BASE_DIR: Refiere al directorio raíz de tu proyecto.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECRET_KEY: Es una clave única para tu proyecto, importante para la seguridad.
# No debe exponerse en producción.
SECRET_KEY = 'django-insecure-ftrppxs&+gc^43@%ir1ofq88$$ixn6rnxnxu#yr)))ev9m#(29'

# DEBUG: En desarrollo, es útil tenerlo como True, pero en producción debe ser False.
DEBUG = True

# ALLOWED_HOSTS: Define qué hosts están permitidos para servir tu aplicación.
# En producción, debe especificar los dominios de tu aplicación.
ALLOWED_HOSTS = []

# INSTALLED_APPS: Aquí se definen todas las aplicaciones que tu proyecto utilizará.
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cuentas',           # App personalizada para gestionar cuentas
    'widget_tweaks',     # Utilizado para mejorar los widgets en los formularios
]

# Define el modelo de usuario personalizado que se utilizará para la autenticación.
AUTH_USER_MODEL = 'cuentas.CustomUser'

# Define cómo Django almacenará los mensajes entre requests.
MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'

# MIDDLEWARE: Conjunto de clases que Django utiliza durante el procesamiento de una solicitud.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URL principal de configuración del proyecto.
ROOT_URLCONF = 'sesion.urls'

# Configuración de las plantillas de Django.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Configuración de WSGI para la despliegue de tu aplicación.
WSGI_APPLICATION = 'sesion.wsgi.application'

# Configuración de base de datos. Este proyecto utiliza SQLite por defecto.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Configuración de validadores de contraseñas.
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Configuración de internacionalización. El proyecto está configurado en español.
LANGUAGE_CODE = 'es'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Configuración para archivos estáticos.
STATIC_URL = 'static/'

# Define el tipo de campo por defecto para los campos clave primaria en los modelos.
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# MEDIA_URL define la URL base para archivos multimedia; MEDIA_ROOT especifica dónde se almacenan físicamente esos archivos en el servidor.
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
